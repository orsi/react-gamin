export const KEYBOARD_KEY_CODES = {
  Alt: "AltLeft",
  ArrowDown: "ArrowDown",
  ArrowLeft: "ArrowLeft",
  ArrowRight: "ArrowRight",
  ArrowUp: "ArrowUp",
  Backspace: "Backspace",
  CapsLock: "CapsLock",
  Clear: "NumLock",
  Control: "ControlLeft",
  Delete: "Delete",
  End: "End",
  Enter: "NumpadEnter",
  Escape: "Escape",
  F1: "F1",
  F2: "F2",
  F3: "F3",
  F4: "F4",
  F5: "F5",
  F6: "F6",
  F7: "F7",
  F8: "F8",
  F9: "F9",
  F10: "F10",
  F12: "F12",
  F13: "F13",
  F14: "F14",
  F15: "F15",
  F16: "F16",
  F17: "F17",
  F18: "F18",
  F19: "F19",
  Home: "Home",
  Meta: "OSLeft",
  PageDown: "PageDown",
  PageUp: "PageUp",
  Shift: "ShiftRight",
  Tab: "Tab",
  " ": "Space",
  "0": "Digit0",
  "1": "Digit1",
  "2": "Digit2",
  "3": "Digit3",
  "4": "Digit4",
  "5": "Digit5",
  "6": "Digit6",
  "7": "Digit7",
  "8": "Digit8",
  "9": "Digit9",
  A: "KeyA",
  B: "KeyB",
  C: "KeyC",
  D: "KeyD",
  E: "KeyE",
  F: "KeyF",
  G: "KeyG",
  H: "KeyH",
  I: "KeyI",
  J: "KeyJ",
  K: "KeyK",
  L: "KeyL",
  M: "KeyM",
  N: "KeyN",
  O: "KeyO",
  P: "KeyP",
  Q: "KeyQ",
  R: "KeyR",
  S: "KeyS",
  T: "KeyT",
  U: "KeyU",
  V: "KeyV",
  W: "KeyW",
  X: "KeyX",
  Y: "KeyY",
  Z: "KeyZ",
  a: "KeyA",
  b: "KeyB",
  c: "KeyC",
  d: "KeyD",
  e: "KeyE",
  f: "KeyF",
  g: "KeyG",
  h: "KeyH",
  i: "KeyI",
  j: "KeyJ",
  k: "KeyK",
  l: "KeyL",
  m: "KeyM",
  n: "KeyN",
  o: "KeyO",
  p: "KeyP",
  q: "KeyQ",
  r: "KeyR",
  s: "KeyS",
  t: "KeyT",
  u: "KeyU",
  v: "KeyV",
  w: "KeyW",
  x: "KeyX",
  y: "KeyY",
  z: "KeyZ",
  "~": "Backquote",
  "!": "Digit1",
  "@": "Digit2",
  "#": "Digit3",
  $: "Digit4",
  "%": "Digit5",
  "^": "Digit6",
  "&": "Digit7",
  "(": "Digit9",
  ")": "Digit0",
  _: "Minus",
  "|": "Backslash",
  "}": "BracketRight",
  "{": "BracketLeft",
  ":": "Semicolon",
  "?": "Slash",
  ">": "Period",
  "<": "Comma",
  "`": "Backquote",
  "[": "BracketLeft",
  "]": "BracketRight",
  "\\": "Backslash",
  "/": "Slash",
  ".": "NumpadDecimal",
  ";": "Semicolon",
  "'": "Quote",
  '"': "Quote",
  ",": "Comma",
  "*": "Digit8",
  "+": "Equal",
  "-": "Minus",
  "=": "Equal",
} as const;

export type KeyboardKey = keyof typeof KEYBOARD_KEY_CODES;

export type KeyboardCode =
  (typeof KEYBOARD_KEY_CODES)[keyof typeof KEYBOARD_KEY_CODES];

// cf. https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button#value
// 0: Main button pressed, usually the left button or the un-initialized state
// 1: Auxiliary button pressed, usually the wheel button or the middle button (if present)
// 2: Secondary button pressed, usually the right button
// 3: Fourth button, typically the Browser Back button
// 4: Fifth button, typically the Browser Forward button
export const MouseButtonMap = {
  0: "left",
  1: "wheel",
  2: "right",
  3: "back",
  4: "forward",
} as const;

export type MouseButtonMapKey = keyof typeof MouseButtonMap;

export type MouseButton = (typeof MouseButtonMap)[MouseButtonMapKey];

export type MiniMouseEvent = {
  button: MouseButton | undefined | null;
  x: number;
  y: number;
};

// 8bitDo controller buttons
// 0 1 2 3 4 5 6  7  8      9     10 11 12 13   14   15    16
// B A Y X L R L2 R2 Select Start L3 R3 Up Down Left Right Home
export const GamepadButtonMap = {
  0: "B",
  1: "A",
  2: "Y",
  3: "X",
  4: "L",
  5: "R",
  6: "L2",
  7: "R2",
  8: "Select",
  9: "Start",
  10: "L3",
  11: "R3",
  12: "Up",
  13: "Down",
  14: "Left",
  15: "Right",
  16: "Home", // unnecessary?
} as const;

export type GamepadButtonMapKey = keyof typeof GamepadButtonMap;

export type GamepadButton = (typeof GamepadButtonMap)[GamepadButtonMapKey];
